/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export interface Comments {
  content: string;
  createdAt: number;
  id: Generated<number>;
  postId: number;
  userId: number;
}

export interface Marketplace {
  category: string;
  condition: Generated<string>;
  createdAt: number;
  description: string;
  id: Generated<number>;
  name: string;
  price: number;
  userId: number;
}

export interface MarketplacePhotos {
  createdAt: number;
  id: Generated<number>;
  marketplaceId: number;
  photoUrl: string;
}

export interface Messages {
  createdAt: number;
  fromUserId: number;
  id: Generated<number>;
  message: string;
  toUserId: number;
}

export interface Posts {
  content: string;
  createdAt: number;
  id: Generated<number>;
  photoUrl: string | null;
  userId: number;
}

export interface Users {
  displayName: string | null;
  email: string;
  id: Generated<number>;
  password: string | null;
  username: string;
}

export interface DB {
  comments: Comments;
  marketplace: Marketplace;
  marketplacePhotos: MarketplacePhotos;
  messages: Messages;
  posts: Posts;
  users: Users;
}
